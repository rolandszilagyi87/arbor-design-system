@use '../tokens/index' as *;

/* ========== [SPACING: PADDING] üó∫Ô∏è ‚úÖ ========== */

@mixin inset-square($size) {
  padding: map-get((
    xs: $space-square-xs,
    sm: $space-square-sm,
    md: $space-square-md,
    lg: $space-square-lg,
    xl: $space-square-xl
  ), $size);
}

@mixin inset-stack($size) {
  padding: map-get((
    xs: $space-stack-xs,
    sm: $space-stack-sm,
    md: $space-stack-md,
    lg: $space-stack-lg,
    xl: $space-stack-xl,
    xxl: $space-stack-xxl
  ), $size);
}

@mixin inset-inline($size) {
  padding: map-get((
    xs: $space-inline-xs,
    sm: $space-inline-sm,
    md: $space-inline-md,
    lg: $space-inline-lg,
    xl: $space-inline-xl,
    xxl: $space-inline-xxl
  ), $size);
}

@mixin inset-squish($size) {
  padding: map-get((
    sm: $space-squish-sm,
    md: $space-squish-md,
    lg: $space-squish-lg
  ), $size);
}

@mixin inset-stretch($size) {
  padding: map-get((
    sm: $space-stretch-sm,
    md: $space-stretch-md,
    lg: $space-stretch-lg
  ), $size);
}

@mixin inset-top($value) {
  padding-top: $value;
}

@mixin inset-left($value) {
  padding-left: $value;
}

// @include inset-square(md);

/* ========== [SPACING: MARGIN] üó∫Ô∏è ‚úÖ ========== */

@mixin margin-square($size) {
  margin: map-get((
    xs: $space-square-xs,
    sm: $space-square-sm,
    md: $space-square-md,
    lg: $space-square-lg,
    xl: $space-square-xl
  ), $size);
}

@mixin margin-stack($size) {
  margin: map-get((
    xs: $space-stack-xs,
    sm: $space-stack-sm,
    md: $space-stack-md,
    lg: $space-stack-lg,
    xl: $space-stack-xl,
    xxl: $space-stack-xxl
  ), $size);
}

@mixin margin-inline($size) {
  margin: map-get((
    xs: $space-inline-xs,
    sm: $space-inline-sm,
    md: $space-inline-md,
    lg: $space-inline-lg,
    xl: $space-inline-xl,
    xxl: $space-inline-xxl
  ), $size);
}

@mixin margin-squish($size) {
  margin: map-get((
    sm: $space-squish-sm,
    md: $space-squish-md,
    lg: $space-squish-lg
  ), $size);
}

@mixin margin-stretch($size) {
  margin: map-get((
    sm: $space-stretch-sm,
    md: $space-stretch-md,
    lg: $space-stretch-lg
  ), $size);
}

@mixin margin-top($value) {
  margin-top: $value;
}

@mixin margin-left($value) {
  margin-left: $value;
}

// @include margin-stack(sm);

/* ========== [ELEVATIONS] ‚úÖ ========== */

@mixin elevation($level) {
  @if $level == 0 {
    box-shadow: $elevation-none;
  } @else if $level == 1 {
    box-shadow: $elevation-sm;
  } @else if $level == 2 {
    box-shadow: $elevation-md;
  } @else if $level == 3 {
    box-shadow: $elevation-lg;
  } @else if $level == 4 {
    box-shadow: $elevation-xl;
  } @else if $level == 5 {
    box-shadow: $elevation-xxl;
  } @else {
    box-shadow: none;
  }
}

// @include elevation(3);