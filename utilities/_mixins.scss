@use "../tokens/index" as *;
@use "../base/index" as *;

/*--- TEXT STYLE MIXIN ---*/
@mixin text($style-name) {
  $style: map-get($text-styles, $style-name);

  @if $style {
    font-size: map-get($style, font-size);
    font-weight: map-get($style, font-weight);
    line-height: map-get($style, line-height);

    @if map-has-key($style, text-transform) {
      text-transform: map-get($style, text-transform);
    }

    @if map-has-key($style, font-style) {
      font-style: map-get($style, font-style);
    }
  }
} // @include text-style("title");

/*--- SPACING MIXIN ---*/
@mixin spacing($type, $direction, $value) {
  @if $type == margin {
    @if $direction == inline {
      margin-left: $value;
      margin-right: $value;
    }
    @else if $direction == block {
      margin-top: $value;
      margin-bottom: $value;
    }
  }
  @else if $type == padding {
    @if $direction == inline {
      padding-left: $value;
      padding-right: $value;
    }
    @else if $direction == block {
      padding-top: $value;
      padding-bottom: $value;
    }
  }
} /* @include spacing(padding, inline, $space-lg);
     @include spacing(padding, block, $space-lg); */

/*--- BREAKPOINTS MIXIN ---*/
@mixin screen($device) {
  @if $device == mobile {
    @media (min-width: $mobile) {
      @content;
    }
  }
  @else if $device == tablet {
    @media (min-width: $tablet) {
      @content;
    }
  }
  @else if $device == laptop {
    @media (min-width: $laptop) {
      @content;
    }
  }
  @else if $device == desktop {
    @media (min-width: $desktop) {
      @content;
    }
  }
} // @include breakpoint(tablet)

/*--- SIZING MIXIN ---*/
@mixin sizing($width-size: 'full', $height-size: 'full') {
  @if $width-size == 'xs' {
    width: $sizing-width-xs;
  } @else if $width-size == 'sm' {
    width: $sizing-width-sm;
  } @else if $width-size == 'md' {
    width: $sizing-width-md;
  } @else if $width-size == 'lg' {
    width: $sizing-width-lg;
  } @else if $width-size == 'xl' {
    width: $sizing-width-xl;
  } @else if $width-size == 'full' {
    width: $sizing-width-full;
  }

  @if $height-size == 'xs' {
    height: $sizing-height-xs;
  } @else if $height-size == 'sm' {
    height: $sizing-height-sm;
  } @else if $height-size == 'md' {
    height: $sizing-height-md;
  } @else if $height-size == 'lg' {
    height: $sizing-height-lg;
  } @else if $height-size == 'xl' {
    height: $sizing-height-xl;
  } @else if $height-size == 'full' {
    height: $sizing-height-full;
  }
} // @include sizing('md', 'lg');

/*--- MAX-WIDTH MIXIN ---*/
@mixin sizing-max-width($max-width-size: 'xl') {
  @if $max-width-size == 'xs' {
    max-width: $sizing-max-xs;
  } @else if $max-width-size == 'sm' {
    max-width: $sizing-max-sm;
  } @else if $max-width-size == 'md' {
    max-width: $sizing-max-md;
  } @else if $max-width-size == 'lg' {
    max-width: $sizing-max-lg;
  } @else if $max-width-size == 'xl' {
    max-width: $sizing-max-xl;
  }
} // @include max-width-sizing('xl');

/*--- BORDER MIXIN ---*/
@mixin border($width, $color, $radius) {
  border: $width solid $color;
  border-radius: $radius;
} /* @include border($border-width-thick, red);
     @include border($border-width-thin, blue, $border-radius-lg); */

/*--- TEXT-SHADOW MIXIN ---*/
@mixin text-shadow($color, $size) {
  text-shadow: $color $text-shadow-sm;
} // @include text-shadow($shadow-color-dark, $text-shadow-lg);

@mixin box-shadow($level) {
  @if $level == 0 {
    box-shadow: $shadow-0;
  } @else if $level == 1 {
    $s: $shadow-1;
    box-shadow: nth($s, 1) nth($s, 2) nth($s, 3) nth($s, 4);
  } @else if $level == 2 {
    $s: $shadow-2;
    box-shadow: nth($s, 1) nth($s, 2) nth($s, 3) nth($s, 4);
  } @else if $level == 3 {
    $s: $shadow-3;
    box-shadow: nth($s, 1) nth($s, 2) nth($s, 3) nth($s, 4);
  } @else if $level == 4 {
    $s: $shadow-4;
    box-shadow: nth($s, 1) nth($s, 2) nth($s, 3) nth($s, 4);
  } @else if $level == 5 {
    $s: $shadow-5;
    box-shadow: nth($s, 1) nth($s, 2) nth($s, 3) nth($s, 4);
  } @else {
    box-shadow: none;
  }
}

/* --- ICON MIXIN --- */
@mixin icon($size, $color: black) {
  @if $size == sm {
    width: $icon-size-sm;
    height: $icon-size-sm;
  }
  @else if $size == md {
    width: $icon-size-md;
    height: $icon-size-md;
  }
  @else if $size == lg {
    width: $icon-size-lg;
    height: $icon-size-lg;
  }
  @else if $size == xl {
    width: $icon-size-xl;
    height: $icon-size-xl;
  }

  flex-shrink: 0;
  color: $color;
  stroke: currentColor;
} /* @include icon(md, blue);
     @include icon(xl)  */